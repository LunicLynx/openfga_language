---
name: mixture of 1.0 and 1.1 should yield error
dsl: |
  model
    schema 1.1
  type user
  type org
    relations
      define member: [user]
  type group
    relations
      define parent as self
      define viewer as viewer from parent
error_message: "1 error occurred:\n\t* syntax error at line=9, column=18: missing ':' at 'as'\n\n"
expected_errors:
  - msg: "missing ':' at 'as'"
    line: 9
    column: 18 
    metadata: 
      symbol: 'as'
      start: 117
      stop: 118
---
name: empty directly assignable relations with spaces should yield error 
dsl: |
  model
    schema 1.1
  type user
  type org
    relations
      define member: [ ]
      define reader: [user]
error_message: "1 error occurred:\n\t* syntax error at line=6, column=21: mismatched input ']' expecting ALPHA_NUMERIC\n\n"
expected_errors:
  - msg: "mismatched input ']' expecting ALPHA_NUMERIC"
    line: 6
    column: 21 
    metadata: 
      symbol: ']'
      start: 71
      stop: 71
---
name: empty directly assignable relations without spaces should yield error 
dsl: |
  model
    schema 1.1
  type user
  type org
    relations
      define member: []
      define reader: [user]
error_message: "1 error occurred:\n\t* syntax error at line=6, column=20: mismatched input ']' expecting {ALPHA_NUMERIC, WS}\n\n"
expected_errors:
  - msg: "mismatched input ']' expecting {ALPHA_NUMERIC, WS}"
    line: 6
    column: 20 
    metadata: 
      symbol: ']'
      start: 70
      stop: 70
---
name: unsupported schema version should yield error
dsl: |
  model
    schema 0.9
  type user
  type org
    relations
      define member: [user]
error_message: "2 errors occurred:\n\t* syntax error at line=2, column=10: token recognition error at: '.'\n\t* syntax error at line=2, column=9: mismatched input '0' expecting '1.1'\n\n"
expected_errors:
  - msg: "token recognition error at: '.'"
    line: 2
    column: 10
  - msg: "mismatched input '0' expecting '1.1'"
    line: 2
    column: 9
    metadata: 
      symbol: '0'
      start: 15
      stop: 15
---
name: model 1.1 has no directly allowed types in viewer
dsl: |
  model
    schema 1.1
  type user
  type folder
    relations
      define parent: [folder]
      define viewer as self or viewer from parent
error_message:  "1 error occurred:\n\t* syntax error at line=7, column=18: missing ':' at 'as'\n\n"
expected_errors:
  - msg: "missing ':' at 'as'"
    line: 7
    column: 18
    metadata:
      symbol: 'as'
      start: 99
      stop: 100
---
name: >-
  mixing 1.0 and 1.1 should not be allowed as non assignable self is not
  allowed
dsl: |
  model
    schema 1.1
  type user
  type folder
    relations
      define reader: [user]
      define viewer as self or reader
error_message: "1 error occurred:\n\t* syntax error at line=7, column=18: missing ':' at 'as'\n\n"
expected_errors:
  - msg: "missing ':' at 'as'"
    line: 7
    column: 18
    metadata:
      symbol: 'as'
      start: 97
      stop: 98
---
name: should not allow no model schema
dsl: |
  type user
  type group
    relations
      define group: [user] as self
error_message: "3 errors occurred:\n\t* syntax error at line=1, column=0: extraneous input 'type' expecting {'model', '#', WS}\n\t* syntax error at line=1, column=5: extraneous input 'user' expecting {'#', WS}\n\t* syntax error at line=2, column=0: mismatched input 'type' expecting 'model'\n\n"
expected_errors:
  - msg: "extraneous input 'type' expecting {'model', '#', WS}"
    line: 1
    column: 0
    metadata:
      symbol: 'type'
      start: 0
      stop: 3
  - msg: "extraneous input 'user' expecting {'#', WS}"
    line: 1
    column: 5
    metadata:
      symbol: 'user'
      start: 5
      stop: 8
  - msg: "mismatched input 'type' expecting 'model'"
    line: 2
    column: 0
    
---
name: incorrect wildcard restriction should be raised
dsl: |
  model
    schema 1.1
  type user
  type group
    relations
      define member: [user, user:*:*]
error_message: "1 error occurred:\n\t* syntax error at line=6, column=32: extraneous input ':' expecting {']', ',', WS}\n\n"
expected_errors:
  - msg: "extraneous input ':' expecting {']', ',', WS}"
    line: 6
    column: 32
    metadata:
      symbol: ':'
      start: 84
      stop: 84
---
name: exclusion target not allow to reference itself in TTU  
dsl: |
  model
    schema 1.1
  type user
  type document
    relations
      define editor: [user]
      define viewer: editor but not [document#viewer]
error_message: "1 error occurred:\n\t* syntax error at line=7, column=34: extraneous input '[' expecting ALPHA_NUMERIC\n\n"
expected_errors:
  - msg: "extraneous input '[' expecting ALPHA_NUMERIC"
    line: 7
    column: 34
    metadata:
      symbol: '['
      start: 115
      stop: 115
---
name: detect if every child in union are related  
dsl: |
  model
    schema 1.1
  type document
    relations
      define viewer: [document#viewer] or [document#editor]
      define editor: [document#viewer] or [document#editor]
error_message: "1 error occurred:\n\t* syntax error at line=5, column=40: extraneous input '[' expecting ALPHA_NUMERIC\n\n"
expected_errors:
  - msg: "extraneous input '[' expecting ALPHA_NUMERIC"
    line: 5
    column: 40
    metadata:
      symbol: '['
      start: 85
      stop: 85
---
name: intersection child to reference other relations for same type 
dsl: |
  model
    schema 1.1
  type user
  type document
    relations
      define editor: [user]
      define viewer: [user] and [document#editor]
error_message: "1 error occurred:\n\t* syntax error at line=7, column=30: extraneous input '[' expecting ALPHA_NUMERIC\n\n"
expected_errors:
  - msg: "extraneous input '[' expecting ALPHA_NUMERIC"
    line: 7
    column: 30
    metadata:
      symbol: '['
      start: 111
      stop: 111
---
name: exclusion base to reference other relations for same type 
dsl: |
  model
    schema 1.1
  type user
  type document
    relations
      define editor: [user]
      define viewer: [document#editor] but not [user]
error_message: "1 error occurred:\n\t* syntax error at line=7, column=45: extraneous input '[' expecting ALPHA_NUMERIC\n\n"
expected_errors:
  - msg: "extraneous input '[' expecting ALPHA_NUMERIC"
    line: 7
    column: 45
    metadata:
      symbol: '['
      start: 126
      stop: 126
---
name: exclusion target to reference other relations for same type 
dsl: |
  model
    schema 1.1
  type user
  type document
    relations
      define editor: [user]
      define viewer: [user] but not [document#editor]
error_message: "1 error occurred:\n\t* syntax error at line=7, column=34: extraneous input '[' expecting ALPHA_NUMERIC\n\n"
expected_errors:
  - msg: "extraneous input '[' expecting ALPHA_NUMERIC"
    line: 7
    column: 34
    metadata:
      symbol: '['
      start: 115
      stop: 115
---
name: union child to reference other relations for same type 
dsl: |
  model
    schema 1.1
  type user
  type document
    relations
      define editor: [user]
      define viewer: [user] or [document#editor]
error_message: "1 error occurred:\n\t* syntax error at line=7, column=29: extraneous input '[' expecting ALPHA_NUMERIC\n\n"
expected_errors:
  - msg: "extraneous input '[' expecting ALPHA_NUMERIC"
    line: 7
    column: 29
    metadata:
      symbol: '['
      start: 110
      stop: 110
---
name: simple group reference to itself
dsl: |
  model
    schema 1.1
  type user
  type group
    relations
      define group: [group]
expected_errors: []
---
name: group has entry point to itself
dsl: |
  model
    schema 1.1
  type user
  type org
    relations
      define viewer: [user]
  type group
    relations
      define parent: [group, org]
      define viewer: viewer from parent
expected_errors: []
---
name: intersection with directly related
dsl: |
  model
    schema 1.1
  type user
  type org
    relations
      define member: [user]
  type group
    relations
      define parent: [group]
      define writer: [user, org#member]
      define viewer: [user, org#member] or writer
expected_errors: []
---
name: should allow directly assigned as last item
dsl: |
  model
    schema 1.1
  type user
  type org
    relations
      define member: [user]
  type group
    relations
      define parent: [group]
      define writer: [user, org#member]
      define viewer: [user, org#member] or writer
expected_errors: []
---
name: union with directly related
dsl: |
  model
    schema 1.1
  type user
  type org
    relations
      define member: [user]
  type group
    relations
      define parent: [group]
      define writer: [user, org#member]
      define viewer: [user, org#member] and writer
expected_errors: []
---
name: union allow directly assigned as last item
dsl: |
  model
    schema 1.1
  type user
  type org
    relations
      define member: [user]
  type group
    relations
      define parent: [group]
      define writer: [user, org#member]
      define viewer: [user, org#member] and writer
expected_errors: []
---
name: but not with directly linked
dsl: |
  model
    schema 1.1
  type user
  type docs
    relations
      define blocked: [user]
      define can_view: [user] but not blocked
expected_errors: []
---
name: intersection with directly related and has spaces and blank lines
dsl: |
  model
    schema 1.1
  type user
  type org

    relations
      define member: [user]    

  type group
    relations
      define parent: [group]
      define writer: [user, org#member]
      define viewer:    [   user,    org#member   ]       or    writer
expected_errors: []
---
name: model 1.1 tuple to userset
dsl: |
  model
    schema 1.1
  type folder
    relations
      define viewer: [user]

  type document
    relations
      define parent: [folder]
      define viewer: [user] or viewer from parent
  type user
expected_errors: []
---
name: model 1.1 allow TTU with relations as long as 1 child has such relation
dsl: |-
  model
    schema 1.1
  type final
    relations
      define children: [child1, child2]
      define has_assigned: u1 from children or u2 from children
  type child1
    relations
      define role: [user]
      define u1: role
  type child2
    relations
      define role: [user]
      define u2: role
  type user
expected_errors: []
---
name: model 1.1 wildcard restricted type
dsl: |
  model
    schema 1.1
  type folder
    relations
      define viewer: [user, user:*]

  type user
expected_errors: []
---
name: model 1.1 wildcard restricted type in the middle
dsl: |
  model
    schema 1.1
  type folder
    relations
      define viewer: [user, user:*, group]

  type user
  type group
expected_errors: []
 ---
 name: model 1.1 with spacing in allowed type
 dsl: |
   model
     schema 1.1
   type folder
     relations
       define viewer: [  user  , user:*  , group  ]

   type user
   type group
 expectedError: []
---
name: union does not require all child to have entry
dsl: |
  model
    schema 1.1
  type user
  type doc
    relations
      define admin: [user]
      define action1: admin or action2 or action3
      define action2: admin or action3 or action1
      define action3: admin or action1 or action2
expected_errors: []
---
name: union does not require all child to have entry even for intersection child
dsl: |
  model
    schema 1.1
  type user
  type docs
    relations
      define admin: [user]
      define union1: admin or union2
      define union2: admin or union1
      define intersection1: union1 and union2
      define intersection2: union1 and union2
expected_errors: []
---
name: union does not require all child to have entry even for exclusion child
dsl: |
  model
    schema 1.1
  type user
  type docs
    relations
      define admin: [user]
      define union1: admin or union2
      define union2: admin or union1
      define exclusion1: admin but not union1
      define exclusion2: admin but not union2
expected_errors: []
---
name: union child allow to reference itself in TTU
dsl: |
  model
    schema 1.1
  type user
  type document
    relations
      define editor: [user]
      define viewer: [document#viewer] or editor
expected_errors: []
---
name: mixture of relations from relations for same type
dsl: |
  model
    schema 1.1
  type user

  type document
    relations
      define restricted: [user]
      define editor: [user]
      define viewer: [document#viewer] or editor
      define can_view: viewer but not restricted
      define can_view_actual: can_view
expected_errors: []


#---
#name: >-
#  model 1.1 diff in exclusion not valid and spaces are reflected correctly in
#  error messages
#dsl: |
#  model
#    schema 1.1
#  type user
#  type group
#    relations
#      define member: [user]
#      define reader   : member   but not   allowed
#expectedError:
#  - endColumn: 49
#    endLineNumber: 7
#    message: The relation `allowed` does not exist.
#    extraInformation:
#      relation: allowed
#      error: missing-definition
#    severity: 8
#    source: linter
#    startColumn: 42
#    startLineNumber: 7
#---

# ---
# name: invalid type name for self
# dsl: |
#   model
#     schema 1.1
#   type user
#   type self
#     relations
#       define member: [user]
# expectedError:
#   - endColumn: 10
#     endLineNumber: 4
#     message: A type cannot be named 'self' or 'this'.
#     extraInformation:
#       error: reserved-type-keywords
#     severity: 8
#     source: linter
#     startColumn: 6
#     startLineNumber: 4
# ---
# name: invalid type name for this
# dsl: |
#   model
#     schema 1.1
#   type user
#   type this
#     relations
#       define member: [user]
# expectedError:
#   - endColumn: 10
#     endLineNumber: 4
#     message: A type cannot be named 'self' or 'this'.
#     extraInformation:
#       error: reserved-type-keywords
#     severity: 8
#     source: linter
#     startColumn: 6
#     startLineNumber: 4
# ---
# name: invalid relation name for self
# dsl: |
#   model
#     schema 1.1
#   type user
#   type group
#     relations
#       define self: [user]
# expectedError:
#   - endColumn: 16
#     endLineNumber: 6
#     message: A relation cannot be named 'self' or 'this'.
#     extraInformation:
#       error: reserved-relation-keywords
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 6
# ---
# name: invalid relation name for this
# dsl: |
#   model
#     schema 1.1
#   type user
#   type group
#     relations
#       define this: [user]
# expectedError:
#   - endColumn: 16
#     endLineNumber: 6
#     message: A relation cannot be named 'self' or 'this'.
#     extraInformation:
#       error: reserved-relation-keywords
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 6

# ---
# name: invalid type name
# dsl: >
#   model
#     schema 1.1
#   type user

#   type
#   aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
#     relations
#       define member: [user]
# expectedError:
#   - endColumn: 350
#     endLineNumber: 4
#     message: >-
#       Type
#       'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
#       does not match naming rule: '^[^:#@\s]{1,254}$'.
#     extraInformation:
#       error: invalid-name
#     severity: 8
#     source: linter
#     startColumn: 6
#     startLineNumber: 4
# ---
# name: invalid relation name
# dsl: |
#   model
#     schema 1.1
#   type user
#   type org
#     relations
#       define aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa: [user]
# expectedError:
#   - endColumn: 112
#     endLineNumber: 6
#     message: >-
#       Relation
#       'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
#       of type 'org' does not match naming rule: '^[^:#@\s]{1,50}$'.
#     extraInformation:
#       error: invalid-name
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 6
# ---
# name: no entry point for multiple type
# dsl: |
#   model
#     schema 1.1
#   type user
#   type team
#     relations
#       define parent: [group]
#       define viewer: viewer from parent
#   type group
#     relations
#       define parent: [team]
#       define viewer: viewer from parent
# expectedError:
#   - endColumn: 18
#     endLineNumber: 7
#     message: '`viewer` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: viewer
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 7
#   - endColumn: 18
#     endLineNumber: 11
#     message: '`viewer` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: viewer
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 11
# ---
# name: no entry point for single type single relation
# dsl: |
#   model
#     schema 1.1
#   type user
#   type group
#     relations
#       define group: group from group
# expectedError:
#   - endColumn: 17
#     endLineNumber: 6
#     message: '`group` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: group
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 6
# ---
# name: no entry point for single type multiple relations
# dsl: |
#   model
#     schema 1.1
#   type user
#   type group
#     relations
#       define parent: [group]
#       define viewer: viewer from parent
# expectedError:
#   - endColumn: 18
#     endLineNumber: 7
#     message: '`viewer` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: viewer
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 7
# ---
# name: no entry point if directly assignable value is itself
# dsl: |-
#   model
#     schema 1.1
#   type group
#     relations
#       define viewer: [group#viewer]
   
# expectedError:
#   - endColumn: 18
#     endLineNumber: 5
#     message: '`viewer` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: viewer
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 5
# ---
# name: from target relation is valid
# dsl: |
#   model
#     schema 1.1
#   type user
#   type group
#     relations
#       define parent: [group]
#       define viewer: reader from parent
# expectedError:
#   - endColumn: 38
#     endLineNumber: 7
#     message: '`reader` is not a valid relation for `group`.'
#     extraInformation:
#       relation: reader
#       error: invalid-relation-type
#       typeName: group
#     severity: 8
#     source: linter
#     startColumn: 20
#     startLineNumber: 7
# ---
# name: invalid type is used
# dsl: |
#   model
#     schema 1.1
#   type user
#   type group
#     relations
#       define parent: [unknown]
# expectedError:
#   - endColumn: 28
#     endLineNumber: 6
#     message: '`unknown` is not a valid type.'
#     extraInformation:
#       error: invalid-type
#       typeName: unknown
#     severity: 8
#     source: linter
#     startColumn: 21
#     startLineNumber: 6
# ---
# name: from target relation is not a valid relation for the from child
# dsl: |
#   model
#     schema 1.1
#   type user
#   type org
#   type group
#     relations
#       define parent: [group]
#       define viewer: viewer from org
# expectedError:
#   - endColumn: 35
#     endLineNumber: 8
#     message: '`org` is not a valid relation for `group`.'
#     extraInformation:
#       relation: org
#       error: invalid-relation-type
#       typeName: group
#     severity: 8
#     source: linter
#     startColumn: 20
#     startLineNumber: 8
# ---
# name: org is not a relation for group
# dsl: |
#   model
#     schema 1.1
#   type user
#   type org
#   type group
#     relations
#       define parent: [group]
#       define viewer: org from parent
# expectedError:
#   - endColumn: 35
#     endLineNumber: 8
#     message: '`org` is not a valid relation for `group`.'
#     extraInformation:
#       relation: org
#       error: invalid-relation-type
#       typeName: group
#     severity: 8
#     source: linter
#     startColumn: 20
#     startLineNumber: 8
# ---
# name: direct relation assignment not found
# dsl: |
#   model
#     schema 1.1
#   type user
#   type org
#   type group
#     relations
#       define parent: [group, group#org]
# expectedError:
#   - endColumn: 37
#     endLineNumber: 7
#     message: '`org` is not a valid relation for `group`.'
#     extraInformation:
#       relation: org
#       error: invalid-relation-type
#       typeName: group
#     severity: 8
#     source: linter
#     startColumn: 28
#     startLineNumber: 7
# ---
# name: group viewer no entry point
# dsl: |
#   model
#     schema 1.1
#   type user
#   type org
#     relations
#       define viewer: [user]
#   type group
#     relations
#       define parent: [group]
#       define viewer: viewer from parent
# expectedError:
#   - endColumn: 18
#     endLineNumber: 10
#     message: '`viewer` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: viewer
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 10
# ---
# name: cyclic loop
# dsl: |
#   model
#     schema 1.1
#   type document
#     relations
#       define reader: writer
#       define writer: reader
# expectedError:
#   - endColumn: 18
#     endLineNumber: 5
#     message: '`reader` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: reader
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 5
#   - endColumn: 18
#     endLineNumber: 6
#     message: '`writer` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: writer
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 6
# ---
# name: parent relation used inside contains a write
# dsl: |
#   model
#     schema 1.1
#   type user
#   type folder
#     relations
#       define parent: [folder] or parent from parent
#       define viewer: [user] or viewer from parent
# expectedError:
#   - endColumn: 50
#     endLineNumber: 6
#     message: '`parent` relation used inside from allows only direct relation.'
#     extraInformation:
#       relation: parent
#       error: tupleuset-not-direct
#     severity: 8
#     source: linter
#     startColumn: 44
#     startLineNumber: 6
#   - endColumn: 48
#     endLineNumber: 7
#     message: '`parent` relation used inside from allows only direct relation.'
#     extraInformation:
#       relation: parent
#       error: tupleuset-not-direct
#     severity: 8
#     source: linter
#     startColumn: 42
#     startLineNumber: 7
# ---
# name: parent relation used inside viewer contains a write
# dsl: |
#   model
#     schema 1.1
#   type user
#   type folder
#     relations
#       define root: [folder]
#       define parent: [folder] or root
#       define viewer: [user] or viewer from parent
# expectedError:
#   - endColumn: 48
#     endLineNumber: 8
#     message: '`parent` relation used inside from allows only direct relation.'
#     extraInformation:
#       relation: parent
#       error: tupleuset-not-direct
#     severity: 8
#     source: linter
#     startColumn: 42
#     startLineNumber: 8
# ---
# name: from is another tuple to userset
# dsl: |
#   model
#     schema 1.1
#   type user
#   type folder
#     relations
#       define root: [folder]
#       define parent: [folder, folder#parent]
#       define viewer: [user] or viewer from parent
# expectedError:
#   - endColumn: 48
#     endLineNumber: 8
#     message: '`parent` relation used inside from allows only direct relation.'
#     extraInformation:
#       relation: parent
#       error: tupleuset-not-direct
#     severity: 8
#     source: linter
#     startColumn: 42
#     startLineNumber: 8
# ---
# name: model 1.1 one of the intersection relation is not valid
# dsl: |
#   model
#     schema 1.1
#   type user
#   type group
#     relations
#       define member: [user]
#       define reader: member and allowed
# expectedError:
#   - endColumn: 38
#     endLineNumber: 7
#     message: The relation `allowed` does not exist.
#     extraInformation:
#       relation: allowed
#       error: missing-definition
#     severity: 8
#     source: linter
#     startColumn: 31
#     startLineNumber: 7
# ---
# name: model 1.1 one of the union relation is not valid
# dsl: |
#   model
#     schema 1.1
#   type user
#   type group
#     relations
#       define member: [user]
#       define reader: member or allowed
# expectedError:
#   - endColumn: 37
#     endLineNumber: 7
#     message: The relation `allowed` does not exist.
#     extraInformation:
#       relation: allowed
#       error: missing-definition
#     severity: 8
#     source: linter
#     startColumn: 30
#     startLineNumber: 7
# ---
# name: model 1.1 base in exclusion not valid
# dsl: |
#   model
#     schema 1.1
#   type user
#   type group
#     relations
#       define member: [user]
#       define reader: allowed but not member
# expectedError:
#   - endColumn: 27
#     endLineNumber: 7
#     message: The relation `allowed` does not exist.
#     extraInformation:
#       relation: allowed
#       error: missing-definition
#     severity: 8
#     source: linter
#     startColumn: 20
#     startLineNumber: 7
# ---
# name: model 1.1 diff in exclusion not valid
# dsl: |
#   model
#     schema 1.1
#   type user
#   type group
#     relations
#       define member: [user]
#       define reader: member but not allowed
# expectedError:
#   - endColumn: 42
#     endLineNumber: 7
#     message: The relation `allowed` does not exist.
#     extraInformation:
#       relation: allowed
#       error: missing-definition
#     severity: 8
#     source: linter
#     startColumn: 35
#     startLineNumber: 7
# ---
# name: type restriction cannot contains both wildcard and relation
# dsl: |-
#   model
#     schema 1.1
#   type user
#   type department
#     relations
#       define member: [user]
#   type org
#     relations
#       define reader: [department, department#member:*]
    
# expectedError:
#   - endColumn: 52
#     endLineNumber: 9
#     message: >-
#       Type restriction 'department#member:*' cannot contain both wildcard and
#       relation
#     extraInformation:
#       error: type-wildcard-relation
#     severity: 8
#     source: linter
#     startColumn: 33
#     startLineNumber: 9
# ---
# name: no entry point intersection that relates to itself
# dsl: |
#   model
#     schema 1.1
#   type user
#   type doc
#     relations
#       define admin: [user]
#       define action1: admin and action2 and action3
#       define action2: admin and action3 and action1
#       define action3: admin and action1 and action2
# expectedError:
#   - endColumn: 19
#     endLineNumber: 7
#     message: '`action1` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: action1
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 7
#   - endColumn: 19
#     endLineNumber: 8
#     message: '`action2` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: action2
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 8
#   - endColumn: 19
#     endLineNumber: 9
#     message: '`action3` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: action3
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 9
# ---
# name: no entry point exclusion that relates to itself
# dsl: |
#   model
#     schema 1.1
#   type user
#   type doc
#     relations
#       define admin: [user]
#       define action1: admin but not action2
#       define action2: admin but not action3
#       define action3: admin but not action1
# expectedError:
#   - endColumn: 19
#     endLineNumber: 7
#     message: '`action1` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: action1
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 7
#   - endColumn: 19
#     endLineNumber: 8
#     message: '`action2` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: action2
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 8
#   - endColumn: 19
#     endLineNumber: 9
#     message: '`action3` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: action3
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 9
# ---
# name: intersection child not allow to reference itself in TTU
# dsl: |
#   model
#     schema 1.1
#   type user
#   type document
#     relations
#       define editor: [user]
#       define viewer: [document#viewer] and editor
# expectedError:
#   - endColumn: 18
#     endLineNumber: 7
#     message: '`viewer` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: viewer
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 7
# ---
# name: exclusion base not allow to reference itself in TTU
# dsl: |
#   model
#     schema 1.1
#   type user
#   type document
#     relations
#       define editor: [user]
#       define viewer: [document#viewer] but not editor
# expectedError:
#   - endColumn: 18
#     endLineNumber: 7
#     message: '`viewer` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: viewer
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 7
# ---
# name: detect loop in TTU dependency
# dsl: |
#   model
#     schema 1.1
#   type folder
#     relations
#       define parent: [document]
#       define viewer: viewer from parent
#   type document
#     relations
#       define parent: [folder]
#       define viewer: viewer from parent
# expectedError:
#   - endColumn: 18
#     endLineNumber: 6
#     message: '`viewer` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: viewer
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 6
#   - endColumn: 18
#     endLineNumber: 10
#     message: '`viewer` is an impossible relation (no entrypoint).'
#     extraInformation:
#       relation: viewer
#       error: relation-no-entry-point
#     severity: 8
#     source: linter
#     startColumn: 12
#     startLineNumber: 10
# ---
# name: model 1.1 should raise error if none of the children has such relation
# dsl: |-
#   model
#     schema 1.1
#   type final
#     relations
#       define children: [child1, child2]
#       define has_assigned: u3 from children or u2 from children
#   type child1
#     relations
#       define role: [user]
#       define u1: role
#   type child2
#     relations
#       define role: [user]
#       define u4: role
#   type user
# expectedError:
#   - endColumn: 42
#     endLineNumber: 6
#     extraInformation:
#       error: invalid-relation-type
#       relation: u3
#       typeName: child1
#     message: '`u3` is not a valid relation for `child1`.'
#     severity: 8
#     source: linter
#     startColumn: 26
#     startLineNumber: 6
#   - endColumn: 42
#     endLineNumber: 6
#     extraInformation:
#       error: invalid-relation-type
#       relation: u3
#       typeName: child2
#     message: '`u3` is not a valid relation for `child2`.'
#     severity: 8
#     source: linter
#     startColumn: 26
#     startLineNumber: 6
#   - endColumn: 62
#     endLineNumber: 6
#     extraInformation:
#       error: invalid-relation-type
#       relation: u2
#       typeName: child1
#     message: '`u2` is not a valid relation for `child1`.'
#     severity: 8
#     source: linter
#     startColumn: 46
#     startLineNumber: 6
#   - endColumn: 62
#     endLineNumber: 6
#     extraInformation:
#       error: invalid-relation-type
#       relation: u2
#       typeName: child2
#     message: '`u2` is not a valid relation for `child2`.'
#     severity: 8
#     source: linter
#     startColumn: 46
#     startLineNumber: 6
# ---
# name: self reference with wildcard
# dsl: |
#   model
#     schema 1.1
#   type user

#   type document
#     relations
#       define parent: [document, document:*]
#       define viewer: [user] or viewer from parent
# expectedError:
#   - endColumn: 10
#     endLineNumber: 8
#     extraInformation:
#       error: type-wildcard-relation
#     message: 'Type restriction ''document:*'' cannot contain both wildcard and relation'
#     severity: 8
#     source: linter
#     startColumn: 0
#     startLineNumber: 8