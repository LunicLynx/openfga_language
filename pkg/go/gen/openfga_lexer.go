// Code generated from /app/OpenFGALexer.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
  	"sync"
	"unicode"
	"github.com/antlr4-go/antlr/v4"
)
// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter


type OpenFGALexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames []string
	// TODO: EOF string
}

var OpenFGALexerLexerStaticData struct {
  once                   sync.Once
  serializedATN          []int32
  ChannelNames           []string
  ModeNames              []string
  LiteralNames           []string
  SymbolicNames          []string
  RuleNames              []string
  PredictionContextCache *antlr.PredictionContextCache
  atn                    *antlr.ATN
  decisionToDFA          []*antlr.DFA
}

func openfgalexerLexerInit() {
  staticData := &OpenFGALexerLexerStaticData
  staticData.ChannelNames = []string{
    "DEFAULT_TOKEN_CHANNEL", "HIDDEN",
  }
  staticData.ModeNames = []string{
    "DEFAULT_MODE", "CONDITION_DEF",
  }
  staticData.LiteralNames = []string{
    "", "':'", "','", "'<'", "'>'", "'['", "", "'('", "')'", "", "", "'#'", 
    "'and'", "'or'", "'but not'", "'from'", "'model'", "'schema'", "'1.1'", 
    "'type'", "'condition'", "'relations'", "'define'", "'with'", "'=='", 
    "'!='", "'in'", "'<='", "'>='", "'&&'", "'||'", "']'", "'{'", "'}'", 
    "'.'", "'-'", "'!'", "'?'", "'+'", "'*'", "'/'", "'%'", "'true'", "'false'", 
    "'null'",
  }
  staticData.SymbolicNames = []string{
    "", "COLON", "COMMA", "LESS", "GREATER", "LBRACKET", "RBRACKET", "LPAREN", 
    "RPAREN", "WHITESPACE", "IDENTIFIER", "HASH", "AND", "OR", "BUT_NOT", 
    "FROM", "MODEL", "SCHEMA", "SCHEMA_VERSION", "TYPE", "CONDITION", "RELATIONS", 
    "DEFINE", "KEYWORD_WITH", "EQUALS", "NOT_EQUALS", "IN", "LESS_EQUALS", 
    "GREATER_EQUALS", "LOGICAL_AND", "LOGICAL_OR", "RPRACKET", "LBRACE", 
    "RBRACE", "DOT", "MINUS", "EXCLAM", "QUESTIONMARK", "PLUS", "STAR", 
    "SLASH", "PERCENT", "CEL_TRUE", "CEL_FALSE", "NUL", "CEL_COMMENT", "NUM_FLOAT", 
    "NUM_INT", "NUM_UINT", "STRING", "BYTES", "NEWLINE", "CONDITION_PARAM_CONTAINER", 
    "CONDITION_PARAM_TYPE",
  }
  staticData.RuleNames = []string{
    "HASH", "COLON", "COMMA", "AND", "OR", "BUT_NOT", "FROM", "MODEL", "SCHEMA", 
    "SCHEMA_VERSION", "TYPE", "CONDITION", "RELATIONS", "DEFINE", "KEYWORD_WITH", 
    "EQUALS", "NOT_EQUALS", "IN", "LESS", "LESS_EQUALS", "GREATER_EQUALS", 
    "GREATER", "LOGICAL_AND", "LOGICAL_OR", "LBRACKET", "RPRACKET", "LBRACE", 
    "RBRACE", "LPAREN", "RPAREN", "DOT", "MINUS", "EXCLAM", "QUESTIONMARK", 
    "PLUS", "STAR", "SLASH", "PERCENT", "CEL_TRUE", "CEL_FALSE", "NUL", 
    "BACKSLASH", "LETTER", "DIGIT", "EXPONENT", "HEXDIGIT", "RAW", "ESC_SEQ", 
    "ESC_CHAR_SEQ", "ESC_OCT_SEQ", "ESC_BYTE_SEQ", "ESC_UNI_SEQ", "WHITESPACE", 
    "CEL_COMMENT", "NUM_FLOAT", "NUM_INT", "NUM_UINT", "STRING", "BYTES", 
    "IDENTIFIER", "NEWLINE", "CONDITION_DEF_END", "CONDITION_PARAM_CONTAINER", 
    "CONDITION_PARAM_TYPE", "CONDITION_PARAM_TYPE_LESS", "CONDITION_PARAM_TYPE_GREATER", 
    "CONDITION_OPEN", "CONDITION_COLON", "CONDITION_COMMA", "CONDITION_WS", 
    "CONDITION_NAME",
  }
  staticData.PredictionContextCache = antlr.NewPredictionContextCache()
  staticData.serializedATN = []int32{
	4, 0, 53, 658, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 
	7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 
	7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 
	14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 
	2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 
	25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 
	7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 
	35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 
	2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 
	46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 
	7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 
	56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 
	2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 
	67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 1, 0, 1, 0, 1, 1, 
	1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 
	1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 
	1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 
	1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 
	1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 
	12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 
	1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 
	14, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 
	1, 18, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 
	22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 
	1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 
	32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 
	1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 39, 1, 
	39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 
	1, 43, 1, 43, 1, 44, 1, 44, 3, 44, 304, 8, 44, 1, 44, 4, 44, 307, 8, 44, 
	11, 44, 12, 44, 308, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 
	47, 3, 47, 319, 8, 47, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1, 49, 
	1, 49, 1, 50, 1, 50, 1, 50, 1, 50, 1, 50, 1, 51, 1, 51, 1, 51, 1, 51, 1, 
	51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 
	1, 51, 1, 51, 1, 51, 3, 51, 352, 8, 51, 1, 52, 4, 52, 355, 8, 52, 11, 52, 
	12, 52, 356, 1, 53, 1, 53, 1, 53, 1, 53, 5, 53, 363, 8, 53, 10, 53, 12, 
	53, 366, 9, 53, 1, 53, 1, 53, 1, 54, 4, 54, 371, 8, 54, 11, 54, 12, 54, 
	372, 1, 54, 1, 54, 4, 54, 377, 8, 54, 11, 54, 12, 54, 378, 1, 54, 3, 54, 
	382, 8, 54, 1, 54, 4, 54, 385, 8, 54, 11, 54, 12, 54, 386, 1, 54, 1, 54, 
	1, 54, 1, 54, 4, 54, 393, 8, 54, 11, 54, 12, 54, 394, 1, 54, 3, 54, 398, 
	8, 54, 3, 54, 400, 8, 54, 1, 55, 4, 55, 403, 8, 55, 11, 55, 12, 55, 404, 
	1, 55, 1, 55, 1, 55, 1, 55, 4, 55, 411, 8, 55, 11, 55, 12, 55, 412, 3, 
	55, 415, 8, 55, 1, 56, 4, 56, 418, 8, 56, 11, 56, 12, 56, 419, 1, 56, 1, 
	56, 1, 56, 1, 56, 1, 56, 1, 56, 4, 56, 428, 8, 56, 11, 56, 12, 56, 429, 
	1, 56, 1, 56, 3, 56, 434, 8, 56, 1, 57, 1, 57, 1, 57, 5, 57, 439, 8, 57, 
	10, 57, 12, 57, 442, 9, 57, 1, 57, 1, 57, 1, 57, 1, 57, 5, 57, 448, 8, 
	57, 10, 57, 12, 57, 451, 9, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 
	1, 57, 5, 57, 460, 8, 57, 10, 57, 12, 57, 463, 9, 57, 1, 57, 1, 57, 1, 
	57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 5, 57, 474, 8, 57, 10, 57, 
	12, 57, 477, 9, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 5, 57, 485, 
	8, 57, 10, 57, 12, 57, 488, 9, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 5, 
	57, 495, 8, 57, 10, 57, 12, 57, 498, 9, 57, 1, 57, 1, 57, 1, 57, 1, 57, 
	1, 57, 1, 57, 1, 57, 1, 57, 5, 57, 508, 8, 57, 10, 57, 12, 57, 511, 9, 
	57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 
	5, 57, 523, 8, 57, 10, 57, 12, 57, 526, 9, 57, 1, 57, 1, 57, 1, 57, 1, 
	57, 3, 57, 532, 8, 57, 1, 58, 1, 58, 1, 58, 1, 59, 1, 59, 3, 59, 539, 8, 
	59, 1, 59, 1, 59, 1, 59, 1, 59, 5, 59, 545, 8, 59, 10, 59, 12, 59, 548, 
	9, 59, 1, 60, 3, 60, 551, 8, 60, 1, 60, 3, 60, 554, 8, 60, 1, 60, 1, 60, 
	3, 60, 558, 8, 60, 1, 60, 3, 60, 561, 8, 60, 1, 60, 3, 60, 564, 8, 60, 
	1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 62, 1, 62, 1, 62, 1, 62, 1, 62, 1, 
	62, 1, 62, 3, 62, 578, 8, 62, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 
	1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 
	63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 
	1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 
	63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 
	1, 63, 3, 63, 629, 8, 63, 1, 64, 1, 64, 1, 64, 1, 64, 1, 65, 1, 65, 1, 
	65, 1, 65, 1, 66, 1, 66, 1, 66, 1, 66, 1, 67, 1, 67, 1, 67, 1, 67, 1, 68, 
	1, 68, 1, 68, 1, 68, 1, 69, 1, 69, 1, 69, 1, 69, 1, 70, 1, 70, 1, 70, 1, 
	70, 4, 461, 475, 509, 524, 0, 71, 2, 11, 4, 1, 6, 2, 8, 12, 10, 13, 12, 
	14, 14, 15, 16, 16, 18, 17, 20, 18, 22, 19, 24, 20, 26, 21, 28, 22, 30, 
	23, 32, 24, 34, 25, 36, 26, 38, 3, 40, 27, 42, 28, 44, 4, 46, 29, 48, 30, 
	50, 5, 52, 31, 54, 32, 56, 33, 58, 7, 60, 8, 62, 34, 64, 35, 66, 36, 68, 
	37, 70, 38, 72, 39, 74, 40, 76, 41, 78, 42, 80, 43, 82, 44, 84, 0, 86, 
	0, 88, 0, 90, 0, 92, 0, 94, 0, 96, 0, 98, 0, 100, 0, 102, 0, 104, 0, 106, 
	9, 108, 45, 110, 46, 112, 47, 114, 48, 116, 49, 118, 50, 120, 10, 122, 
	51, 124, 0, 126, 52, 128, 53, 130, 0, 132, 0, 134, 0, 136, 0, 138, 0, 140, 
	0, 142, 0, 2, 0, 1, 16, 2, 0, 65, 90, 97, 122, 2, 0, 69, 69, 101, 101, 
	2, 0, 43, 43, 45, 45, 3, 0, 48, 57, 65, 70, 97, 102, 2, 0, 82, 82, 114, 
	114, 10, 0, 34, 34, 39, 39, 63, 63, 92, 92, 96, 98, 102, 102, 110, 110, 
	114, 114, 116, 116, 118, 118, 2, 0, 88, 88, 120, 120, 3, 0, 9, 9, 12, 12, 
	32, 32, 1, 0, 10, 10, 2, 0, 85, 85, 117, 117, 4, 0, 10, 10, 13, 13, 34, 
	34, 92, 92, 4, 0, 10, 10, 13, 13, 39, 39, 92, 92, 1, 0, 92, 92, 3, 0, 10, 
	10, 13, 13, 34, 34, 3, 0, 10, 10, 13, 13, 39, 39, 2, 0, 66, 66, 98, 98, 
	704, 0, 2, 1, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 8, 1, 0, 
	0, 0, 0, 10, 1, 0, 0, 0, 0, 12, 1, 0, 0, 0, 0, 14, 1, 0, 0, 0, 0, 16, 1, 
	0, 0, 0, 0, 18, 1, 0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 22, 1, 0, 0, 0, 0, 24, 
	1, 0, 0, 0, 0, 26, 1, 0, 0, 0, 0, 28, 1, 0, 0, 0, 0, 30, 1, 0, 0, 0, 0, 
	32, 1, 0, 0, 0, 0, 34, 1, 0, 0, 0, 0, 36, 1, 0, 0, 0, 0, 38, 1, 0, 0, 0, 
	0, 40, 1, 0, 0, 0, 0, 42, 1, 0, 0, 0, 0, 44, 1, 0, 0, 0, 0, 46, 1, 0, 0, 
	0, 0, 48, 1, 0, 0, 0, 0, 50, 1, 0, 0, 0, 0, 52, 1, 0, 0, 0, 0, 54, 1, 0, 
	0, 0, 0, 56, 1, 0, 0, 0, 0, 58, 1, 0, 0, 0, 0, 60, 1, 0, 0, 0, 0, 62, 1, 
	0, 0, 0, 0, 64, 1, 0, 0, 0, 0, 66, 1, 0, 0, 0, 0, 68, 1, 0, 0, 0, 0, 70, 
	1, 0, 0, 0, 0, 72, 1, 0, 0, 0, 0, 74, 1, 0, 0, 0, 0, 76, 1, 0, 0, 0, 0, 
	78, 1, 0, 0, 0, 0, 80, 1, 0, 0, 0, 0, 82, 1, 0, 0, 0, 0, 106, 1, 0, 0, 
	0, 0, 108, 1, 0, 0, 0, 0, 110, 1, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 114, 
	1, 0, 0, 0, 0, 116, 1, 0, 0, 0, 0, 118, 1, 0, 0, 0, 0, 120, 1, 0, 0, 0, 
	0, 122, 1, 0, 0, 0, 1, 124, 1, 0, 0, 0, 1, 126, 1, 0, 0, 0, 1, 128, 1, 
	0, 0, 0, 1, 130, 1, 0, 0, 0, 1, 132, 1, 0, 0, 0, 1, 134, 1, 0, 0, 0, 1, 
	136, 1, 0, 0, 0, 1, 138, 1, 0, 0, 0, 1, 140, 1, 0, 0, 0, 1, 142, 1, 0, 
	0, 0, 2, 144, 1, 0, 0, 0, 4, 146, 1, 0, 0, 0, 6, 148, 1, 0, 0, 0, 8, 150, 
	1, 0, 0, 0, 10, 154, 1, 0, 0, 0, 12, 157, 1, 0, 0, 0, 14, 165, 1, 0, 0, 
	0, 16, 170, 1, 0, 0, 0, 18, 176, 1, 0, 0, 0, 20, 183, 1, 0, 0, 0, 22, 187, 
	1, 0, 0, 0, 24, 192, 1, 0, 0, 0, 26, 204, 1, 0, 0, 0, 28, 214, 1, 0, 0, 
	0, 30, 221, 1, 0, 0, 0, 32, 226, 1, 0, 0, 0, 34, 229, 1, 0, 0, 0, 36, 232, 
	1, 0, 0, 0, 38, 235, 1, 0, 0, 0, 40, 237, 1, 0, 0, 0, 42, 240, 1, 0, 0, 
	0, 44, 243, 1, 0, 0, 0, 46, 245, 1, 0, 0, 0, 48, 248, 1, 0, 0, 0, 50, 251, 
	1, 0, 0, 0, 52, 253, 1, 0, 0, 0, 54, 255, 1, 0, 0, 0, 56, 257, 1, 0, 0, 
	0, 58, 259, 1, 0, 0, 0, 60, 261, 1, 0, 0, 0, 62, 263, 1, 0, 0, 0, 64, 265, 
	1, 0, 0, 0, 66, 267, 1, 0, 0, 0, 68, 269, 1, 0, 0, 0, 70, 271, 1, 0, 0, 
	0, 72, 273, 1, 0, 0, 0, 74, 275, 1, 0, 0, 0, 76, 277, 1, 0, 0, 0, 78, 279, 
	1, 0, 0, 0, 80, 284, 1, 0, 0, 0, 82, 290, 1, 0, 0, 0, 84, 295, 1, 0, 0, 
	0, 86, 297, 1, 0, 0, 0, 88, 299, 1, 0, 0, 0, 90, 301, 1, 0, 0, 0, 92, 310, 
	1, 0, 0, 0, 94, 312, 1, 0, 0, 0, 96, 318, 1, 0, 0, 0, 98, 320, 1, 0, 0, 
	0, 100, 323, 1, 0, 0, 0, 102, 328, 1, 0, 0, 0, 104, 351, 1, 0, 0, 0, 106, 
	354, 1, 0, 0, 0, 108, 358, 1, 0, 0, 0, 110, 399, 1, 0, 0, 0, 112, 414, 
	1, 0, 0, 0, 114, 433, 1, 0, 0, 0, 116, 531, 1, 0, 0, 0, 118, 533, 1, 0, 
	0, 0, 120, 538, 1, 0, 0, 0, 122, 550, 1, 0, 0, 0, 124, 565, 1, 0, 0, 0, 
	126, 577, 1, 0, 0, 0, 128, 628, 1, 0, 0, 0, 130, 630, 1, 0, 0, 0, 132, 
	634, 1, 0, 0, 0, 134, 638, 1, 0, 0, 0, 136, 642, 1, 0, 0, 0, 138, 646, 
	1, 0, 0, 0, 140, 650, 1, 0, 0, 0, 142, 654, 1, 0, 0, 0, 144, 145, 5, 35, 
	0, 0, 145, 3, 1, 0, 0, 0, 146, 147, 5, 58, 0, 0, 147, 5, 1, 0, 0, 0, 148, 
	149, 5, 44, 0, 0, 149, 7, 1, 0, 0, 0, 150, 151, 5, 97, 0, 0, 151, 152, 
	5, 110, 0, 0, 152, 153, 5, 100, 0, 0, 153, 9, 1, 0, 0, 0, 154, 155, 5, 
	111, 0, 0, 155, 156, 5, 114, 0, 0, 156, 11, 1, 0, 0, 0, 157, 158, 5, 98, 
	0, 0, 158, 159, 5, 117, 0, 0, 159, 160, 5, 116, 0, 0, 160, 161, 5, 32, 
	0, 0, 161, 162, 5, 110, 0, 0, 162, 163, 5, 111, 0, 0, 163, 164, 5, 116, 
	0, 0, 164, 13, 1, 0, 0, 0, 165, 166, 5, 102, 0, 0, 166, 167, 5, 114, 0, 
	0, 167, 168, 5, 111, 0, 0, 168, 169, 5, 109, 0, 0, 169, 15, 1, 0, 0, 0, 
	170, 171, 5, 109, 0, 0, 171, 172, 5, 111, 0, 0, 172, 173, 5, 100, 0, 0, 
	173, 174, 5, 101, 0, 0, 174, 175, 5, 108, 0, 0, 175, 17, 1, 0, 0, 0, 176, 
	177, 5, 115, 0, 0, 177, 178, 5, 99, 0, 0, 178, 179, 5, 104, 0, 0, 179, 
	180, 5, 101, 0, 0, 180, 181, 5, 109, 0, 0, 181, 182, 5, 97, 0, 0, 182, 
	19, 1, 0, 0, 0, 183, 184, 5, 49, 0, 0, 184, 185, 5, 46, 0, 0, 185, 186, 
	5, 49, 0, 0, 186, 21, 1, 0, 0, 0, 187, 188, 5, 116, 0, 0, 188, 189, 5, 
	121, 0, 0, 189, 190, 5, 112, 0, 0, 190, 191, 5, 101, 0, 0, 191, 23, 1, 
	0, 0, 0, 192, 193, 5, 99, 0, 0, 193, 194, 5, 111, 0, 0, 194, 195, 5, 110, 
	0, 0, 195, 196, 5, 100, 0, 0, 196, 197, 5, 105, 0, 0, 197, 198, 5, 116, 
	0, 0, 198, 199, 5, 105, 0, 0, 199, 200, 5, 111, 0, 0, 200, 201, 5, 110, 
	0, 0, 201, 202, 1, 0, 0, 0, 202, 203, 6, 11, 0, 0, 203, 25, 1, 0, 0, 0, 
	204, 205, 5, 114, 0, 0, 205, 206, 5, 101, 0, 0, 206, 207, 5, 108, 0, 0, 
	207, 208, 5, 97, 0, 0, 208, 209, 5, 116, 0, 0, 209, 210, 5, 105, 0, 0, 
	210, 211, 5, 111, 0, 0, 211, 212, 5, 110, 0, 0, 212, 213, 5, 115, 0, 0, 
	213, 27, 1, 0, 0, 0, 214, 215, 5, 100, 0, 0, 215, 216, 5, 101, 0, 0, 216, 
	217, 5, 102, 0, 0, 217, 218, 5, 105, 0, 0, 218, 219, 5, 110, 0, 0, 219, 
	220, 5, 101, 0, 0, 220, 29, 1, 0, 0, 0, 221, 222, 5, 119, 0, 0, 222, 223, 
	5, 105, 0, 0, 223, 224, 5, 116, 0, 0, 224, 225, 5, 104, 0, 0, 225, 31, 
	1, 0, 0, 0, 226, 227, 5, 61, 0, 0, 227, 228, 5, 61, 0, 0, 228, 33, 1, 0, 
	0, 0, 229, 230, 5, 33, 0, 0, 230, 231, 5, 61, 0, 0, 231, 35, 1, 0, 0, 0, 
	232, 233, 5, 105, 0, 0, 233, 234, 5, 110, 0, 0, 234, 37, 1, 0, 0, 0, 235, 
	236, 5, 60, 0, 0, 236, 39, 1, 0, 0, 0, 237, 238, 5, 60, 0, 0, 238, 239, 
	5, 61, 0, 0, 239, 41, 1, 0, 0, 0, 240, 241, 5, 62, 0, 0, 241, 242, 5, 61, 
	0, 0, 242, 43, 1, 0, 0, 0, 243, 244, 5, 62, 0, 0, 244, 45, 1, 0, 0, 0, 
	245, 246, 5, 38, 0, 0, 246, 247, 5, 38, 0, 0, 247, 47, 1, 0, 0, 0, 248, 
	249, 5, 124, 0, 0, 249, 250, 5, 124, 0, 0, 250, 49, 1, 0, 0, 0, 251, 252, 
	5, 91, 0, 0, 252, 51, 1, 0, 0, 0, 253, 254, 5, 93, 0, 0, 254, 53, 1, 0, 
	0, 0, 255, 256, 5, 123, 0, 0, 256, 55, 1, 0, 0, 0, 257, 258, 5, 125, 0, 
	0, 258, 57, 1, 0, 0, 0, 259, 260, 5, 40, 0, 0, 260, 59, 1, 0, 0, 0, 261, 
	262, 5, 41, 0, 0, 262, 61, 1, 0, 0, 0, 263, 264, 5, 46, 0, 0, 264, 63, 
	1, 0, 0, 0, 265, 266, 5, 45, 0, 0, 266, 65, 1, 0, 0, 0, 267, 268, 5, 33, 
	0, 0, 268, 67, 1, 0, 0, 0, 269, 270, 5, 63, 0, 0, 270, 69, 1, 0, 0, 0, 
	271, 272, 5, 43, 0, 0, 272, 71, 1, 0, 0, 0, 273, 274, 5, 42, 0, 0, 274, 
	73, 1, 0, 0, 0, 275, 276, 5, 47, 0, 0, 276, 75, 1, 0, 0, 0, 277, 278, 5, 
	37, 0, 0, 278, 77, 1, 0, 0, 0, 279, 280, 5, 116, 0, 0, 280, 281, 5, 114, 
	0, 0, 281, 282, 5, 117, 0, 0, 282, 283, 5, 101, 0, 0, 283, 79, 1, 0, 0, 
	0, 284, 285, 5, 102, 0, 0, 285, 286, 5, 97, 0, 0, 286, 287, 5, 108, 0, 
	0, 287, 288, 5, 115, 0, 0, 288, 289, 5, 101, 0, 0, 289, 81, 1, 0, 0, 0, 
	290, 291, 5, 110, 0, 0, 291, 292, 5, 117, 0, 0, 292, 293, 5, 108, 0, 0, 
	293, 294, 5, 108, 0, 0, 294, 83, 1, 0, 0, 0, 295, 296, 5, 92, 0, 0, 296, 
	85, 1, 0, 0, 0, 297, 298, 7, 0, 0, 0, 298, 87, 1, 0, 0, 0, 299, 300, 2, 
	48, 57, 0, 300, 89, 1, 0, 0, 0, 301, 303, 7, 1, 0, 0, 302, 304, 7, 2, 0, 
	0, 303, 302, 1, 0, 0, 0, 303, 304, 1, 0, 0, 0, 304, 306, 1, 0, 0, 0, 305, 
	307, 3, 88, 43, 0, 306, 305, 1, 0, 0, 0, 307, 308, 1, 0, 0, 0, 308, 306, 
	1, 0, 0, 0, 308, 309, 1, 0, 0, 0, 309, 91, 1, 0, 0, 0, 310, 311, 7, 3, 
	0, 0, 311, 93, 1, 0, 0, 0, 312, 313, 7, 4, 0, 0, 313, 95, 1, 0, 0, 0, 314, 
	319, 3, 98, 48, 0, 315, 319, 3, 102, 50, 0, 316, 319, 3, 104, 51, 0, 317, 
	319, 3, 100, 49, 0, 318, 314, 1, 0, 0, 0, 318, 315, 1, 0, 0, 0, 318, 316, 
	1, 0, 0, 0, 318, 317, 1, 0, 0, 0, 319, 97, 1, 0, 0, 0, 320, 321, 3, 84, 
	41, 0, 321, 322, 7, 5, 0, 0, 322, 99, 1, 0, 0, 0, 323, 324, 3, 84, 41, 
	0, 324, 325, 2, 48, 51, 0, 325, 326, 2, 48, 55, 0, 326, 327, 2, 48, 55, 
	0, 327, 101, 1, 0, 0, 0, 328, 329, 3, 84, 41, 0, 329, 330, 7, 6, 0, 0, 
	330, 331, 3, 92, 45, 0, 331, 332, 3, 92, 45, 0, 332, 103, 1, 0, 0, 0, 333, 
	334, 3, 84, 41, 0, 334, 335, 5, 117, 0, 0, 335, 336, 3, 92, 45, 0, 336, 
	337, 3, 92, 45, 0, 337, 338, 3, 92, 45, 0, 338, 339, 3, 92, 45, 0, 339, 
	352, 1, 0, 0, 0, 340, 341, 3, 84, 41, 0, 341, 342, 5, 85, 0, 0, 342, 343, 
	3, 92, 45, 0, 343, 344, 3, 92, 45, 0, 344, 345, 3, 92, 45, 0, 345, 346, 
	3, 92, 45, 0, 346, 347, 3, 92, 45, 0, 347, 348, 3, 92, 45, 0, 348, 349, 
	3, 92, 45, 0, 349, 350, 3, 92, 45, 0, 350, 352, 1, 0, 0, 0, 351, 333, 1, 
	0, 0, 0, 351, 340, 1, 0, 0, 0, 352, 105, 1, 0, 0, 0, 353, 355, 7, 7, 0, 
	0, 354, 353, 1, 0, 0, 0, 355, 356, 1, 0, 0, 0, 356, 354, 1, 0, 0, 0, 356, 
	357, 1, 0, 0, 0, 357, 107, 1, 0, 0, 0, 358, 359, 5, 47, 0, 0, 359, 360, 
	5, 47, 0, 0, 360, 364, 1, 0, 0, 0, 361, 363, 8, 8, 0, 0, 362, 361, 1, 0, 
	0, 0, 363, 366, 1, 0, 0, 0, 364, 362, 1, 0, 0, 0, 364, 365, 1, 0, 0, 0, 
	365, 367, 1, 0, 0, 0, 366, 364, 1, 0, 0, 0, 367, 368, 6, 53, 1, 0, 368, 
	109, 1, 0, 0, 0, 369, 371, 3, 88, 43, 0, 370, 369, 1, 0, 0, 0, 371, 372, 
	1, 0, 0, 0, 372, 370, 1, 0, 0, 0, 372, 373, 1, 0, 0, 0, 373, 374, 1, 0, 
	0, 0, 374, 376, 5, 46, 0, 0, 375, 377, 3, 88, 43, 0, 376, 375, 1, 0, 0, 
	0, 377, 378, 1, 0, 0, 0, 378, 376, 1, 0, 0, 0, 378, 379, 1, 0, 0, 0, 379, 
	381, 1, 0, 0, 0, 380, 382, 3, 90, 44, 0, 381, 380, 1, 0, 0, 0, 381, 382, 
	1, 0, 0, 0, 382, 400, 1, 0, 0, 0, 383, 385, 3, 88, 43, 0, 384, 383, 1, 
	0, 0, 0, 385, 386, 1, 0, 0, 0, 386, 384, 1, 0, 0, 0, 386, 387, 1, 0, 0, 
	0, 387, 388, 1, 0, 0, 0, 388, 389, 3, 90, 44, 0, 389, 400, 1, 0, 0, 0, 
	390, 392, 5, 46, 0, 0, 391, 393, 3, 88, 43, 0, 392, 391, 1, 0, 0, 0, 393, 
	394, 1, 0, 0, 0, 394, 392, 1, 0, 0, 0, 394, 395, 1, 0, 0, 0, 395, 397, 
	1, 0, 0, 0, 396, 398, 3, 90, 44, 0, 397, 396, 1, 0, 0, 0, 397, 398, 1, 
	0, 0, 0, 398, 400, 1, 0, 0, 0, 399, 370, 1, 0, 0, 0, 399, 384, 1, 0, 0, 
	0, 399, 390, 1, 0, 0, 0, 400, 111, 1, 0, 0, 0, 401, 403, 3, 88, 43, 0, 
	402, 401, 1, 0, 0, 0, 403, 404, 1, 0, 0, 0, 404, 402, 1, 0, 0, 0, 404, 
	405, 1, 0, 0, 0, 405, 415, 1, 0, 0, 0, 406, 407, 5, 48, 0, 0, 407, 408, 
	5, 120, 0, 0, 408, 410, 1, 0, 0, 0, 409, 411, 3, 92, 45, 0, 410, 409, 1, 
	0, 0, 0, 411, 412, 1, 0, 0, 0, 412, 410, 1, 0, 0, 0, 412, 413, 1, 0, 0, 
	0, 413, 415, 1, 0, 0, 0, 414, 402, 1, 0, 0, 0, 414, 406, 1, 0, 0, 0, 415, 
	113, 1, 0, 0, 0, 416, 418, 3, 88, 43, 0, 417, 416, 1, 0, 0, 0, 418, 419, 
	1, 0, 0, 0, 419, 417, 1, 0, 0, 0, 419, 420, 1, 0, 0, 0, 420, 421, 1, 0, 
	0, 0, 421, 422, 7, 9, 0, 0, 422, 434, 1, 0, 0, 0, 423, 424, 5, 48, 0, 0, 
	424, 425, 5, 120, 0, 0, 425, 427, 1, 0, 0, 0, 426, 428, 3, 92, 45, 0, 427, 
	426, 1, 0, 0, 0, 428, 429, 1, 0, 0, 0, 429, 427, 1, 0, 0, 0, 429, 430, 
	1, 0, 0, 0, 430, 431, 1, 0, 0, 0, 431, 432, 7, 9, 0, 0, 432, 434, 1, 0, 
	0, 0, 433, 417, 1, 0, 0, 0, 433, 423, 1, 0, 0, 0, 434, 115, 1, 0, 0, 0, 
	435, 440, 5, 34, 0, 0, 436, 439, 3, 96, 47, 0, 437, 439, 8, 10, 0, 0, 438, 
	436, 1, 0, 0, 0, 438, 437, 1, 0, 0, 0, 439, 442, 1, 0, 0, 0, 440, 438, 
	1, 0, 0, 0, 440, 441, 1, 0, 0, 0, 441, 443, 1, 0, 0, 0, 442, 440, 1, 0, 
	0, 0, 443, 532, 5, 34, 0, 0, 444, 449, 5, 39, 0, 0, 445, 448, 3, 96, 47, 
	0, 446, 448, 8, 11, 0, 0, 447, 445, 1, 0, 0, 0, 447, 446, 1, 0, 0, 0, 448, 
	451, 1, 0, 0, 0, 449, 447, 1, 0, 0, 0, 449, 450, 1, 0, 0, 0, 450, 452, 
	1, 0, 0, 0, 451, 449, 1, 0, 0, 0, 452, 532, 5, 39, 0, 0, 453, 454, 5, 34, 
	0, 0, 454, 455, 5, 34, 0, 0, 455, 456, 5, 34, 0, 0, 456, 461, 1, 0, 0, 
	0, 457, 460, 3, 96, 47, 0, 458, 460, 8, 12, 0, 0, 459, 457, 1, 0, 0, 0, 
	459, 458, 1, 0, 0, 0, 460, 463, 1, 0, 0, 0, 461, 462, 1, 0, 0, 0, 461, 
	459, 1, 0, 0, 0, 462, 464, 1, 0, 0, 0, 463, 461, 1, 0, 0, 0, 464, 465, 
	5, 34, 0, 0, 465, 466, 5, 34, 0, 0, 466, 532, 5, 34, 0, 0, 467, 468, 5, 
	39, 0, 0, 468, 469, 5, 39, 0, 0, 469, 470, 5, 39, 0, 0, 470, 475, 1, 0, 
	0, 0, 471, 474, 3, 96, 47, 0, 472, 474, 8, 12, 0, 0, 473, 471, 1, 0, 0, 
	0, 473, 472, 1, 0, 0, 0, 474, 477, 1, 0, 0, 0, 475, 476, 1, 0, 0, 0, 475, 
	473, 1, 0, 0, 0, 476, 478, 1, 0, 0, 0, 477, 475, 1, 0, 0, 0, 478, 479, 
	5, 39, 0, 0, 479, 480, 5, 39, 0, 0, 480, 532, 5, 39, 0, 0, 481, 482, 3, 
	94, 46, 0, 482, 486, 5, 34, 0, 0, 483, 485, 8, 13, 0, 0, 484, 483, 1, 0, 
	0, 0, 485, 488, 1, 0, 0, 0, 486, 484, 1, 0, 0, 0, 486, 487, 1, 0, 0, 0, 
	487, 489, 1, 0, 0, 0, 488, 486, 1, 0, 0, 0, 489, 490, 5, 34, 0, 0, 490, 
	532, 1, 0, 0, 0, 491, 492, 3, 94, 46, 0, 492, 496, 5, 39, 0, 0, 493, 495, 
	8, 14, 0, 0, 494, 493, 1, 0, 0, 0, 495, 498, 1, 0, 0, 0, 496, 494, 1, 0, 
	0, 0, 496, 497, 1, 0, 0, 0, 497, 499, 1, 0, 0, 0, 498, 496, 1, 0, 0, 0, 
	499, 500, 5, 39, 0, 0, 500, 532, 1, 0, 0, 0, 501, 502, 3, 94, 46, 0, 502, 
	503, 5, 34, 0, 0, 503, 504, 5, 34, 0, 0, 504, 505, 5, 34, 0, 0, 505, 509, 
	1, 0, 0, 0, 506, 508, 9, 0, 0, 0, 507, 506, 1, 0, 0, 0, 508, 511, 1, 0, 
	0, 0, 509, 510, 1, 0, 0, 0, 509, 507, 1, 0, 0, 0, 510, 512, 1, 0, 0, 0, 
	511, 509, 1, 0, 0, 0, 512, 513, 5, 34, 0, 0, 513, 514, 5, 34, 0, 0, 514, 
	515, 5, 34, 0, 0, 515, 532, 1, 0, 0, 0, 516, 517, 3, 94, 46, 0, 517, 518, 
	5, 39, 0, 0, 518, 519, 5, 39, 0, 0, 519, 520, 5, 39, 0, 0, 520, 524, 1, 
	0, 0, 0, 521, 523, 9, 0, 0, 0, 522, 521, 1, 0, 0, 0, 523, 526, 1, 0, 0, 
	0, 524, 525, 1, 0, 0, 0, 524, 522, 1, 0, 0, 0, 525, 527, 1, 0, 0, 0, 526, 
	524, 1, 0, 0, 0, 527, 528, 5, 39, 0, 0, 528, 529, 5, 39, 0, 0, 529, 530, 
	5, 39, 0, 0, 530, 532, 1, 0, 0, 0, 531, 435, 1, 0, 0, 0, 531, 444, 1, 0, 
	0, 0, 531, 453, 1, 0, 0, 0, 531, 467, 1, 0, 0, 0, 531, 481, 1, 0, 0, 0, 
	531, 491, 1, 0, 0, 0, 531, 501, 1, 0, 0, 0, 531, 516, 1, 0, 0, 0, 532, 
	117, 1, 0, 0, 0, 533, 534, 7, 15, 0, 0, 534, 535, 3, 116, 57, 0, 535, 119, 
	1, 0, 0, 0, 536, 539, 3, 86, 42, 0, 537, 539, 5, 95, 0, 0, 538, 536, 1, 
	0, 0, 0, 538, 537, 1, 0, 0, 0, 539, 546, 1, 0, 0, 0, 540, 545, 3, 86, 42, 
	0, 541, 545, 3, 88, 43, 0, 542, 545, 5, 95, 0, 0, 543, 545, 3, 64, 31, 
	0, 544, 540, 1, 0, 0, 0, 544, 541, 1, 0, 0, 0, 544, 542, 1, 0, 0, 0, 544, 
	543, 1, 0, 0, 0, 545, 548, 1, 0, 0, 0, 546, 544, 1, 0, 0, 0, 546, 547, 
	1, 0, 0, 0, 547, 121, 1, 0, 0, 0, 548, 546, 1, 0, 0, 0, 549, 551, 3, 106, 
	52, 0, 550, 549, 1, 0, 0, 0, 550, 551, 1, 0, 0, 0, 551, 557, 1, 0, 0, 0, 
	552, 554, 5, 13, 0, 0, 553, 552, 1, 0, 0, 0, 553, 554, 1, 0, 0, 0, 554, 
	555, 1, 0, 0, 0, 555, 558, 5, 10, 0, 0, 556, 558, 2, 12, 13, 0, 557, 553, 
	1, 0, 0, 0, 557, 556, 1, 0, 0, 0, 558, 560, 1, 0, 0, 0, 559, 561, 3, 106, 
	52, 0, 560, 559, 1, 0, 0, 0, 560, 561, 1, 0, 0, 0, 561, 563, 1, 0, 0, 0, 
	562, 564, 3, 122, 60, 0, 563, 562, 1, 0, 0, 0, 563, 564, 1, 0, 0, 0, 564, 
	123, 1, 0, 0, 0, 565, 566, 3, 60, 29, 0, 566, 567, 1, 0, 0, 0, 567, 568, 
	6, 61, 2, 0, 568, 569, 6, 61, 3, 0, 569, 125, 1, 0, 0, 0, 570, 571, 5, 
	109, 0, 0, 571, 572, 5, 97, 0, 0, 572, 578, 5, 112, 0, 0, 573, 574, 5, 
	108, 0, 0, 574, 575, 5, 105, 0, 0, 575, 576, 5, 115, 0, 0, 576, 578, 5, 
	116, 0, 0, 577, 570, 1, 0, 0, 0, 577, 573, 1, 0, 0, 0, 578, 127, 1, 0, 
	0, 0, 579, 580, 5, 98, 0, 0, 580, 581, 5, 111, 0, 0, 581, 582, 5, 111, 
	0, 0, 582, 629, 5, 108, 0, 0, 583, 584, 5, 115, 0, 0, 584, 585, 5, 116, 
	0, 0, 585, 586, 5, 114, 0, 0, 586, 587, 5, 105, 0, 0, 587, 588, 5, 110, 
	0, 0, 588, 629, 5, 103, 0, 0, 589, 590, 5, 105, 0, 0, 590, 591, 5, 110, 
	0, 0, 591, 629, 5, 116, 0, 0, 592, 593, 5, 117, 0, 0, 593, 594, 5, 105, 
	0, 0, 594, 595, 5, 110, 0, 0, 595, 629, 5, 116, 0, 0, 596, 597, 5, 100, 
	0, 0, 597, 598, 5, 111, 0, 0, 598, 599, 5, 117, 0, 0, 599, 600, 5, 98, 
	0, 0, 600, 601, 5, 108, 0, 0, 601, 629, 5, 101, 0, 0, 602, 603, 5, 100, 
	0, 0, 603, 604, 5, 117, 0, 0, 604, 605, 5, 114, 0, 0, 605, 606, 5, 97, 
	0, 0, 606, 607, 5, 116, 0, 0, 607, 608, 5, 105, 0, 0, 608, 609, 5, 111, 
	0, 0, 609, 629, 5, 110, 0, 0, 610, 611, 5, 116, 0, 0, 611, 612, 5, 105, 
	0, 0, 612, 613, 5, 109, 0, 0, 613, 614, 5, 101, 0, 0, 614, 615, 5, 115, 
	0, 0, 615, 616, 5, 116, 0, 0, 616, 617, 5, 97, 0, 0, 617, 618, 5, 109, 
	0, 0, 618, 629, 5, 112, 0, 0, 619, 620, 5, 105, 0, 0, 620, 621, 5, 112, 
	0, 0, 621, 622, 5, 97, 0, 0, 622, 623, 5, 100, 0, 0, 623, 624, 5, 100, 
	0, 0, 624, 625, 5, 114, 0, 0, 625, 626, 5, 101, 0, 0, 626, 627, 5, 115, 
	0, 0, 627, 629, 5, 115, 0, 0, 628, 579, 1, 0, 0, 0, 628, 583, 1, 0, 0, 
	0, 628, 589, 1, 0, 0, 0, 628, 592, 1, 0, 0, 0, 628, 596, 1, 0, 0, 0, 628, 
	602, 1, 0, 0, 0, 628, 610, 1, 0, 0, 0, 628, 619, 1, 0, 0, 0, 629, 129, 
	1, 0, 0, 0, 630, 631, 3, 38, 18, 0, 631, 632, 1, 0, 0, 0, 632, 633, 6, 
	64, 4, 0, 633, 131, 1, 0, 0, 0, 634, 635, 3, 44, 21, 0, 635, 636, 1, 0, 
	0, 0, 636, 637, 6, 65, 5, 0, 637, 133, 1, 0, 0, 0, 638, 639, 3, 58, 28, 
	0, 639, 640, 1, 0, 0, 0, 640, 641, 6, 66, 6, 0, 641, 135, 1, 0, 0, 0, 642, 
	643, 3, 4, 1, 0, 643, 644, 1, 0, 0, 0, 644, 645, 6, 67, 7, 0, 645, 137, 
	1, 0, 0, 0, 646, 647, 3, 6, 2, 0, 647, 648, 1, 0, 0, 0, 648, 649, 6, 68, 
	8, 0, 649, 139, 1, 0, 0, 0, 650, 651, 3, 106, 52, 0, 651, 652, 1, 0, 0, 
	0, 652, 653, 6, 69, 9, 0, 653, 141, 1, 0, 0, 0, 654, 655, 3, 120, 59, 0, 
	655, 656, 1, 0, 0, 0, 656, 657, 6, 70, 10, 0, 657, 143, 1, 0, 0, 0, 44, 
	0, 1, 303, 308, 318, 351, 356, 364, 372, 378, 381, 386, 394, 397, 399, 
	404, 412, 414, 419, 429, 433, 438, 440, 447, 449, 459, 461, 473, 475, 486, 
	496, 509, 524, 531, 538, 544, 546, 550, 553, 557, 560, 563, 577, 628, 11, 
	5, 1, 0, 0, 1, 0, 7, 8, 0, 4, 0, 0, 7, 3, 0, 7, 4, 0, 7, 7, 0, 7, 1, 0, 
	7, 2, 0, 7, 9, 0, 7, 10, 0,
}
  deserializer := antlr.NewATNDeserializer(nil)
  staticData.atn = deserializer.Deserialize(staticData.serializedATN)
  atn := staticData.atn
  staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
  decisionToDFA := staticData.decisionToDFA
  for index, state := range atn.DecisionToState {
    decisionToDFA[index] = antlr.NewDFA(state, index)
  }
}

// OpenFGALexerInit initializes any static state used to implement OpenFGALexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewOpenFGALexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func OpenFGALexerInit() {
  staticData := &OpenFGALexerLexerStaticData
  staticData.once.Do(openfgalexerLexerInit)
}

// NewOpenFGALexer produces a new lexer instance for the optional input antlr.CharStream.
func NewOpenFGALexer(input antlr.CharStream) *OpenFGALexer {
  OpenFGALexerInit()
	l := new(OpenFGALexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
  staticData := &OpenFGALexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "OpenFGALexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// OpenFGALexer tokens.
const (
	OpenFGALexerCOLON = 1
	OpenFGALexerCOMMA = 2
	OpenFGALexerLESS = 3
	OpenFGALexerGREATER = 4
	OpenFGALexerLBRACKET = 5
	OpenFGALexerRBRACKET = 6
	OpenFGALexerLPAREN = 7
	OpenFGALexerRPAREN = 8
	OpenFGALexerWHITESPACE = 9
	OpenFGALexerIDENTIFIER = 10
	OpenFGALexerHASH = 11
	OpenFGALexerAND = 12
	OpenFGALexerOR = 13
	OpenFGALexerBUT_NOT = 14
	OpenFGALexerFROM = 15
	OpenFGALexerMODEL = 16
	OpenFGALexerSCHEMA = 17
	OpenFGALexerSCHEMA_VERSION = 18
	OpenFGALexerTYPE = 19
	OpenFGALexerCONDITION = 20
	OpenFGALexerRELATIONS = 21
	OpenFGALexerDEFINE = 22
	OpenFGALexerKEYWORD_WITH = 23
	OpenFGALexerEQUALS = 24
	OpenFGALexerNOT_EQUALS = 25
	OpenFGALexerIN = 26
	OpenFGALexerLESS_EQUALS = 27
	OpenFGALexerGREATER_EQUALS = 28
	OpenFGALexerLOGICAL_AND = 29
	OpenFGALexerLOGICAL_OR = 30
	OpenFGALexerRPRACKET = 31
	OpenFGALexerLBRACE = 32
	OpenFGALexerRBRACE = 33
	OpenFGALexerDOT = 34
	OpenFGALexerMINUS = 35
	OpenFGALexerEXCLAM = 36
	OpenFGALexerQUESTIONMARK = 37
	OpenFGALexerPLUS = 38
	OpenFGALexerSTAR = 39
	OpenFGALexerSLASH = 40
	OpenFGALexerPERCENT = 41
	OpenFGALexerCEL_TRUE = 42
	OpenFGALexerCEL_FALSE = 43
	OpenFGALexerNUL = 44
	OpenFGALexerCEL_COMMENT = 45
	OpenFGALexerNUM_FLOAT = 46
	OpenFGALexerNUM_INT = 47
	OpenFGALexerNUM_UINT = 48
	OpenFGALexerSTRING = 49
	OpenFGALexerBYTES = 50
	OpenFGALexerNEWLINE = 51
	OpenFGALexerCONDITION_PARAM_CONTAINER = 52
	OpenFGALexerCONDITION_PARAM_TYPE = 53
)

// OpenFGALexerCONDITION_DEF is the OpenFGALexer mode.
const OpenFGALexerCONDITION_DEF = 1

